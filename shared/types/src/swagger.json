{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"FlattenedScheduleResponse": {
				"properties": {
					"id": {
						"type": "string"
					},
					"times": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"daysOfWeek": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"isActive": {
						"type": "boolean"
					},
					"medicationId": {
						"type": "string"
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					},
					"medicationName": {
						"type": "string"
					},
					"medicationDosage": {
						"type": "string"
					},
					"careRecipientId": {
						"type": "string"
					},
					"careRecipientFirstName": {
						"type": "string"
					},
					"careRecipientLastName": {
						"type": "string"
					},
					"careRecipientFullName": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"times",
					"daysOfWeek",
					"isActive",
					"medicationId",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DayOfWeek": {
				"description": "Enum for days of the week",
				"enum": [
					"Sunday",
					"Monday",
					"Tuesday",
					"Wednesday",
					"Thursday",
					"Friday",
					"Saturday"
				],
				"type": "string"
			},
			"CreateScheduleRequest": {
				"properties": {
					"times": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"daysOfWeek": {
						"items": {
							"$ref": "#/components/schemas/DayOfWeek"
						},
						"type": "array"
					},
					"medicationId": {
						"type": "string"
					}
				},
				"required": [
					"times",
					"daysOfWeek",
					"medicationId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateScheduleRequest": {
				"properties": {
					"times": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"daysOfWeek": {
						"items": {
							"$ref": "#/components/schemas/DayOfWeek"
						},
						"type": "array"
					},
					"isActive": {
						"type": "boolean"
					},
					"medicationId": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"FlattenedMedicationResponse": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"dosage": {
						"type": "string"
					},
					"instructions": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					},
					"careRecipientId": {
						"type": "string"
					},
					"careRecipientFirstName": {
						"type": "string"
					},
					"careRecipientLastName": {
						"type": "string"
					},
					"careRecipientFullName": {
						"type": "string"
					},
					"scheduleIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"scheduleTimes": {
						"items": {
							"items": {
								"type": "string"
							},
							"type": "array"
						},
						"type": "array"
					},
					"scheduleDaysOfWeek": {
						"items": {
							"items": {
								"type": "string"
							},
							"type": "array"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"dosage",
					"instructions",
					"isActive",
					"createdAt",
					"updatedAt",
					"careRecipientId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateMedicationRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"dosage": {
						"type": "string"
					},
					"instructions": {
						"type": "string"
					},
					"careRecipientId": {
						"type": "string"
					},
					"schedule": {
						"properties": {
							"daysOfWeek": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"times": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": [
							"daysOfWeek",
							"times"
						],
						"type": "object"
					},
					"isActive": {
						"type": "boolean"
					},
					"daysOfWeek": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"dosage",
					"instructions",
					"careRecipientId",
					"schedule"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateMedicationRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"dosage": {
						"type": "string"
					},
					"instructions": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"careRecipientId": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"DefaultSelection_Prisma._36_DosePayload_": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"medicationId": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"scheduledFor": {
						"type": "string",
						"format": "date-time"
					},
					"takenAt": {
						"type": "string",
						"format": "date-time"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"medicationId",
					"status",
					"scheduledFor",
					"takenAt",
					"id"
				],
				"type": "object"
			},
			"FlattenedDoseResponse": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"medicationId": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"scheduledFor": {
						"type": "string",
						"format": "date-time"
					},
					"takenAt": {
						"type": "string",
						"format": "date-time"
					},
					"id": {
						"type": "string"
					},
					"medicationName": {
						"type": "string"
					},
					"medicationDosage": {
						"type": "string"
					},
					"medicationInstructions": {
						"type": "string"
					},
					"careRecipientId": {
						"type": "string"
					},
					"careRecipientFirstName": {
						"type": "string"
					},
					"careRecipientLastName": {
						"type": "string"
					},
					"careRecipientFullName": {
						"type": "string"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"medicationId",
					"status",
					"scheduledFor",
					"takenAt",
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateDoseStatusRequest": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"scheduled",
							"taken",
							"missed",
							"skipped"
						]
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateDoseRequest": {
				"properties": {
					"medicationId": {
						"type": "string"
					},
					"scheduleId": {
						"type": "string"
					},
					"scheduledTime": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"taken"
						],
						"nullable": false
					}
				},
				"required": [
					"medicationId",
					"scheduleId",
					"scheduledTime"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpcomingMedication": {
				"properties": {
					"medicationId": {
						"type": "string"
					},
					"medicationName": {
						"type": "string"
					},
					"dosage": {
						"type": "string"
					},
					"recipientId": {
						"type": "string"
					},
					"recipientName": {
						"type": "string"
					},
					"scheduleId": {
						"type": "string"
					},
					"scheduledTime": {
						"type": "string"
					},
					"daysOfWeek": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"takenToday": {
						"type": "boolean"
					}
				},
				"required": [
					"medicationId",
					"medicationName",
					"dosage",
					"recipientId",
					"recipientName",
					"scheduleId",
					"scheduledTime",
					"daysOfWeek",
					"takenToday"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DashboardStats": {
				"properties": {
					"totalRecipients": {
						"type": "number",
						"format": "double"
					},
					"totalMedications": {
						"type": "number",
						"format": "double"
					},
					"totalSchedules": {
						"type": "number",
						"format": "double"
					},
					"todayDoses": {
						"type": "number",
						"format": "double"
					},
					"takenDoses": {
						"type": "number",
						"format": "double"
					},
					"missedDoses": {
						"type": "number",
						"format": "double"
					},
					"complianceRate": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"totalRecipients",
					"totalMedications",
					"totalSchedules",
					"todayDoses",
					"takenDoses",
					"missedDoses",
					"complianceRate"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DefaultSelection_Prisma._36_CareRecipientPayload_": {
				"properties": {
					"isActive": {
						"type": "boolean"
					},
					"dateOfBirth": {
						"type": "string",
						"format": "date-time"
					},
					"lastName": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"isActive",
					"dateOfBirth",
					"lastName",
					"firstName",
					"updatedAt",
					"createdAt",
					"id"
				],
				"type": "object"
			},
			"CareRecipient": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_CareRecipientPayload_",
				"description": "Model CareRecipient"
			},
			"DefaultSelection_Prisma._36_MedicationPayload_": {
				"properties": {
					"careRecipientId": {
						"type": "string"
					},
					"instructions": {
						"type": "string"
					},
					"dosage": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"careRecipientId",
					"instructions",
					"dosage",
					"isActive",
					"updatedAt",
					"createdAt",
					"id",
					"name"
				],
				"type": "object"
			},
			"Medication": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_MedicationPayload_",
				"description": "Model Medication"
			},
			"CareRecipientResponse": {
				"properties": {
					"isActive": {
						"type": "boolean"
					},
					"dateOfBirth": {
						"type": "string",
						"format": "date-time"
					},
					"lastName": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"id": {
						"type": "string"
					},
					"medications": {
						"items": {
							"$ref": "#/components/schemas/Medication"
						},
						"type": "array"
					}
				},
				"required": [
					"isActive",
					"dateOfBirth",
					"lastName",
					"firstName",
					"updatedAt",
					"createdAt",
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateCareRecipientRequest": {
				"properties": {
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"dateOfBirth": {
						"type": "string"
					}
				},
				"required": [
					"firstName",
					"lastName",
					"dateOfBirth"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateCareRecipientRequest": {
				"properties": {
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"dateOfBirth": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Pick_User.Exclude_keyofUser.password__": {
				"properties": {
					"id": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"email": {
						"type": "string"
					},
					"role": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"createdAt",
					"updatedAt",
					"firstName",
					"lastName",
					"isActive",
					"email",
					"role"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.password_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.password__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"AuthResponse": {
				"properties": {
					"user": {
						"$ref": "#/components/schemas/Omit_User.password_"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"user",
					"token"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RegisterRequest": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"role": {
						"type": "string",
						"enum": [
							"admin",
							"caregiver"
						]
					}
				},
				"required": [
					"email",
					"password",
					"firstName",
					"lastName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoginRequest": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserProfile": {
				"properties": {
					"user": {
						"$ref": "#/components/schemas/Omit_User.password_"
					}
				},
				"required": [
					"user"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "medication_management_api",
		"version": "1.0.0",
		"description": "Medication Management API",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "Thomas Bowen"
		}
	},
	"paths": {
		"/schedules": {
			"get": {
				"operationId": "GetSchedules",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/FlattenedScheduleResponse"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all schedules with optional filtering by medication",
				"tags": [
					"Schedules"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "medicationId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateSchedule",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FlattenedScheduleResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Create a new schedule",
				"tags": [
					"Schedules"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateScheduleRequest"
							}
						}
					}
				}
			}
		},
		"/schedules/{id}": {
			"get": {
				"operationId": "GetSchedule",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FlattenedScheduleResponse"
								}
							}
						}
					},
					"404": {
						"description": "Schedule not found",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Get a schedule by ID",
				"tags": [
					"Schedules"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateSchedule",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FlattenedScheduleResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Schedule not found",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Update a schedule",
				"tags": [
					"Schedules"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateScheduleRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteSchedule",
				"responses": {
					"204": {
						"description": "No content"
					},
					"404": {
						"description": "Schedule not found",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Delete a schedule (mark as inactive)",
				"tags": [
					"Schedules"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/medications": {
			"get": {
				"operationId": "GetMedications",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/FlattenedMedicationResponse"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all medications with optional filtering by care recipient",
				"tags": [
					"Medications"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "careRecipientId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateMedication",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FlattenedMedicationResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Create a new medication",
				"tags": [
					"Medications"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateMedicationRequest"
							}
						}
					}
				}
			}
		},
		"/medications/{id}": {
			"get": {
				"operationId": "GetMedication",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FlattenedMedicationResponse"
								}
							}
						}
					},
					"404": {
						"description": "Medication not found",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Get a medication by ID",
				"tags": [
					"Medications"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateMedication",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FlattenedMedicationResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Medication not found",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Update a medication",
				"tags": [
					"Medications"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateMedicationRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteMedication",
				"responses": {
					"204": {
						"description": "No content"
					},
					"404": {
						"description": "Medication not found",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Delete a medication",
				"tags": [
					"Medications"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/doses": {
			"get": {
				"operationId": "GetDoses",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/FlattenedDoseResponse"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all doses with optional filtering",
				"tags": [
					"Doses"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "recipientId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "startDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "endDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateDose",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FlattenedDoseResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Medication not found",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Create a new dose record",
				"tags": [
					"Doses"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateDoseRequest"
							}
						}
					}
				}
			}
		},
		"/doses/{id}": {
			"get": {
				"operationId": "GetDose",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FlattenedDoseResponse"
								}
							}
						}
					},
					"404": {
						"description": "Dose not found",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Get a dose by ID",
				"tags": [
					"Doses"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/doses/{id}/status": {
			"put": {
				"operationId": "UpdateDoseStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FlattenedDoseResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Dose not found",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Update a dose status",
				"tags": [
					"Doses"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateDoseStatusRequest"
							}
						}
					}
				}
			}
		},
		"/dashboard/upcoming": {
			"get": {
				"operationId": "GetUpcomingDoses",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/UpcomingMedication"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get upcoming medications for next 7 days based on schedules",
				"tags": [
					"Dashboard"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 5,
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/dashboard/stats": {
			"get": {
				"operationId": "GetDashboardStats",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DashboardStats"
								}
							}
						}
					}
				},
				"description": "Get dashboard statistics",
				"tags": [
					"Dashboard"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/care-recipients": {
			"get": {
				"operationId": "GetCareRecipients",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/CareRecipient"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all care recipients",
				"tags": [
					"Care Recipients"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreateCareRecipient",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CareRecipient"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Create a new care recipient",
				"tags": [
					"Care Recipients"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateCareRecipientRequest"
							}
						}
					}
				}
			}
		},
		"/care-recipients/{id}": {
			"get": {
				"operationId": "GetCareRecipient",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CareRecipientResponse"
								}
							}
						}
					},
					"404": {
						"description": "Care recipient not found",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Get a care recipient by ID",
				"tags": [
					"Care Recipients"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateCareRecipient",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CareRecipient"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Care recipient not found",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Update a care recipient",
				"tags": [
					"Care Recipients"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateCareRecipientRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteCareRecipient",
				"responses": {
					"204": {
						"description": "No content"
					},
					"404": {
						"description": "Care recipient not found",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Delete a care recipient (mark as inactive)",
				"tags": [
					"Care Recipients"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Register a new user",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RegisterRequest"
							}
						}
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Login a user",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginRequest"
							}
						}
					}
				}
			}
		},
		"/auth/profile/{userId}": {
			"get": {
				"operationId": "GetProfile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserProfile"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Get current user profile",
				"tags": [
					"Authentication"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/api"
		}
	]
}